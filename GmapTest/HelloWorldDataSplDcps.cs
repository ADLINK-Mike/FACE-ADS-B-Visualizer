/**
 * This file is auto-generated by idlpp
 * 
 * Source: HelloWorldData.idl
 * Generated on: 2019-10-22T10:46:43-0400
 * OpenSplice 6.10.3
 */
using DDS;
using DDS.OpenSplice.CustomMarshalers;
using DDS.OpenSplice.Database;
using DDS.OpenSplice.Kernel;
using System;
using System.Runtime.InteropServices;

namespace HelloWorldData
{
    #region __Msg
    [StructLayout(LayoutKind.Sequential)]
    public struct __Msg
    {
        public int userID;
        public IntPtr message;
        public double longitude_ul;
        public double lattitued_ul;
        public double longitude_lr;
        public double lattitude_lr;
    }
    #endregion

    #region __MsgMarshaler
    public sealed class __MsgMarshaler : DDS.OpenSplice.CustomMarshalers.FooDatabaseMarshaler<HelloWorldData.Msg>
    {
        public static readonly string fullyScopedName = "HelloWorldData::Msg";

        public override void InitEmbeddedMarshalers(IDomainParticipant participant)
        {
        }

        public override V_COPYIN_RESULT CopyIn(System.IntPtr typePtr, System.IntPtr from, System.IntPtr to)
        {
            GCHandle tmpGCHandle = GCHandle.FromIntPtr(from);
            HelloWorldData.Msg fromData = tmpGCHandle.Target as HelloWorldData.Msg;
            return CopyIn(typePtr, fromData, to);
        }

        public V_COPYIN_RESULT CopyIn(System.IntPtr typePtr, HelloWorldData.Msg from, System.IntPtr to)
        {
            __Msg nativeImg = new __Msg();
            V_COPYIN_RESULT result = CopyIn(typePtr, from, ref nativeImg);
            if (result == V_COPYIN_RESULT.OK)
            {
                Marshal.StructureToPtr(nativeImg, to, false);
            }
            return result;
        }

        public V_COPYIN_RESULT CopyIn(System.IntPtr typePtr, HelloWorldData.Msg from, ref __Msg to)
        {
            if (from == null) return V_COPYIN_RESULT.INVALID;
            to.userID = from.userID;
            if (from.message == null) return V_COPYIN_RESULT.INVALID;
            // Unbounded string: bounds check not required...
            if (!Write(c.getBase(typePtr), ref to.message, from.message)) return V_COPYIN_RESULT.OUT_OF_MEMORY;
            to.longitude_ul = from.longitude_ul;
            to.lattitued_ul = from.lattitued_ul;
            to.longitude_lr = from.longitude_lr;
            to.lattitude_lr = from.lattitude_lr;
            return V_COPYIN_RESULT.OK;
        }

        public override void CopyOut(System.IntPtr from, System.IntPtr to)
        {
            __Msg nativeImg = (__Msg) Marshal.PtrToStructure(from, typeof(__Msg));
            GCHandle tmpGCHandleTo = GCHandle.FromIntPtr(to);
            HelloWorldData.Msg toObj = tmpGCHandleTo.Target as HelloWorldData.Msg;
            CopyOut(ref nativeImg, ref toObj);
            tmpGCHandleTo.Target = toObj;
        }

        public override void CopyOut(System.IntPtr from, ref HelloWorldData.Msg to)
        {
            __Msg nativeImg = (__Msg) Marshal.PtrToStructure(from, typeof(__Msg));
            CopyOut(ref nativeImg, ref to);
        }

        public static void StaticCopyOut(System.IntPtr from, ref HelloWorldData.Msg to)
        {
            __Msg nativeImg = (__Msg) Marshal.PtrToStructure(from, typeof(__Msg));
            CopyOut(ref nativeImg, ref to);
        }

        public static void CopyOut(ref __Msg from, ref HelloWorldData.Msg to)
        {
            if (to == null) {
                to = new HelloWorldData.Msg();
            }
            to.userID = from.userID;
            to.message = ReadString(from.message);
            to.longitude_ul = from.longitude_ul;
            to.lattitued_ul = from.lattitued_ul;
            to.longitude_lr = from.longitude_lr;
            to.lattitude_lr = from.lattitude_lr;
        }

    }
    #endregion

}

